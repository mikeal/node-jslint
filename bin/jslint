#!/usr/bin/env node

// jslint wrapper for nodejs
// Adapted from rhino.js. Copyright 2002 Douglas Crockford

// Warning: jslint considers this file insecure and evil.
// JSLINT itself is provided by eval
// Shebang removal regex uses insecure "."
/*jslint evil: true, regexp: false */

// JSLINT is provided by fulljslint.js, loaded by eval
/*global JSLINT */

(function (file) {
    var e,
        i,
        input,
        path = __filename.split("/").slice(0, -2).join("/"),
        sys = require("sys"),
        fs = require("fs");

    if (!file) {
        sys.puts("Usage: jslint file.js");
        process.exit(1);
    }

    // doesn't like relative paths
    eval(fs.readFile(path + "/lib/jslint/jslint.com-mirror/www.jslint.com/fulljslint.js").wait());

    input = fs.readFile(file).wait();
    if (!input) {
        sys.puts("jslint: Couldn't open file '" + file + "'.");
        process.exit(1);
    }

    // remove shebang (lifted from node.js)
    input = input.replace(/^\#\!.*/, "");

    if (!JSLINT(input, {
            bitwise : true,
            eqeqeq : true,
            immed : true,
            newcap : true,
            nomen : false, // because of __filename
            plusplus : true,
            predef : [
                "exports", // CommonJS Modules 1.1
                // NodeJS globals:
                "GLOBAL",
                "process",
                "require",
                "__filename",
                "module"
            ],
            regexp : true,
            undef : true
    })) {
        for (i = 0; i < JSLINT.errors.length; i += 1) {
            e = JSLINT.errors[i];
            if (e) {
                sys.puts('Lint at line ' + e.line + ' character ' +
                        e.character + ': ' + e.reason);
                sys.puts((e.evidence || '').
                        replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1"));
                sys.puts('');
            }
        }
        process.exit(2);
    }

    sys.puts("jslint: No problems found in " + file);
}(process.ARGV[2]));
